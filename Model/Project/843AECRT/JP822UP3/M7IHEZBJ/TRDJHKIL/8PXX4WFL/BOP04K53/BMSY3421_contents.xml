<?xml version="1.0" encoding="UTF-8"?><policy xmlns:es="http://www.novell.com/nxsl/ecmascript" xmlns:ps="http://www.novell.com/nxsl/java/com.netiq.resources.ProvisioningScheduler">
	<rule>
		<description>Add Group Multi-value User assignments to Operation Data</description>
		<conditions>
			<and>
				<if-class-name mode="nocase" op="equal">Group</if-class-name>
				<if-operation mode="regex" op="equal">modify</if-operation>
				<if-global-variable mode="nocase" name="drv.entitlement.onboarding" op="equal">true</if-global-variable>
				<if-global-variable mode="nocase" name="drv.entitlement.Group.onboard" op="equal">true</if-global-variable>
				<if-global-variable mode="nocase" name="drv.entitlement.Group" op="equal">true</if-global-variable>
			</and>
		</conditions>
		<actions>
			<do-if>
				<arg-conditions>
					<and>
						<if-xpath op="not-true">operation-data</if-xpath>
					</and>
				</arg-conditions>
				<arg-actions>
					<do-append-xml-element expression="." name="operation-data"/>
				</arg-actions>
				<arg-actions/>
			</do-if>
			<do-append-xml-element expression="operation-data" name="entitlement-assignments"/>
			<do-set-local-variable name="entitlementObj" scope="policy">
				<arg-node-set>
					<token-query class-name="DirXML-Entitlement" scope="entry">
						<arg-dn>
							<token-global-variable name="dirxml.auto.driverdn"/>
							<token-text xml:space="preserve">\Group</token-text>
						</arg-dn>
					</token-query>
				</arg-node-set>
			</do-set-local-variable>
			<!--
			set local variable 'driverCN' with driver's CN
			-->
			<!-- 
			set local variable 'entitlementQualifiedDn' with the value of the 'qualified-src-dn
			attribute on the root node of 'entitlementObj'
			-->
			<do-set-local-variable name="entitlementQualifiedDn" scope="policy">
				<arg-string>
					<token-xpath expression="$entitlementObj/@qualified-src-dn"/>
				</arg-string>
			</do-set-local-variable>
			<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="entitlement">
				<arg-string>
					<token-parse-dn dest-dn-format="ldap" src-dn-format="qualified-slash">
						<token-local-variable name="entitlementQualifiedDn"/>
					</token-parse-dn>
				</arg-string>
			</do-set-xml-attr>
			<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="value">
				<arg-string>
					<token-text xml:space="preserve">{"ID":"</token-text>
					<token-association/>
					<token-text xml:space="preserve">","ID2":"</token-text>
					<token-src-dn/>
					<token-text xml:space="preserve">"}</token-text>
				</arg-string>
			</do-set-xml-attr>
			<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="fieldId">
				<arg-string>
					<token-text xml:space="preserve">ID2</token-text>
				</arg-string>
			</do-set-xml-attr>
			<do-set-local-variable name="staticMappedResource" scope="policy">
				<arg-string>
					<token-map dest="staticResource" src="entitlementValue" table="..\StaticValueEntitlementMap">
						<token-src-dn/>
					</token-map>
				</arg-string>
			</do-set-local-variable>
			<do-if>
				<arg-conditions>
					<and>
						<if-local-variable mode="nocase" name="staticMappedResource" op="not-equal"/>
					</and>
				</arg-conditions>
				<arg-actions>
					<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="resource">
						<arg-string>
							<token-local-variable name="staticMappedResource"/>
						</arg-string>
					</do-set-xml-attr>
					<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="dynamic">
						<arg-string>
							<token-text xml:space="preserve">false</token-text>
						</arg-string>
					</do-set-xml-attr>
				</arg-actions>
				<arg-actions>
					<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="resource">
						<arg-string>
							<token-map dest="resourceDN" src="entitlementName" table="..\PermissionEntMapping">
								<token-text xml:space="preserve">Group</token-text>
							</token-map>
						</arg-string>
					</do-set-xml-attr>
					<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="dynamic">
						<arg-string>
							<token-text xml:space="preserve">true</token-text>
						</arg-string>
					</do-set-xml-attr>
				</arg-actions>
			</do-if>
			<do-if>
				<arg-conditions>
					<and>
						<if-op-attr name="Member" op="changing"/>
					</and>
				</arg-conditions>
				<arg-actions>
					<do-if>
						<arg-conditions>
							<and>
								<if-xpath op="true">modify-attr[@attr-name='Member']/remove-all-values</if-xpath>
							</and>
						</arg-conditions>
						<arg-actions>
							<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="reconcileAllPermissions">
								<arg-string>
									<token-text xml:space="preserve">true</token-text>
								</arg-string>
							</do-set-xml-attr>
						</arg-actions>
						<arg-actions>
							<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]" name="reconcileAllPermissions">
								<arg-string>
									<token-text xml:space="preserve">false</token-text>
								</arg-string>
							</do-set-xml-attr>
						</arg-actions>
					</do-if>
					<do-set-local-variable name="addmemberList" scope="policy">
						<arg-node-set>
							<token-xpath expression="modify-attr[@attr-name='Member']/add-value/value/text()"/>
						</arg-node-set>
					</do-set-local-variable>
					<do-set-local-variable name="removememberList" scope="policy">
						<arg-node-set>
							<token-xpath expression="modify-attr[@attr-name='Member']/remove-value/value/text()"/>
						</arg-node-set>
					</do-set-local-variable>
					<do-for-each>
						<arg-node-set>
							<token-local-variable name="addmemberList"/>
						</arg-node-set>
						<arg-actions>
							<do-set-local-variable name="holderObj" scope="policy">
								<arg-node-set>
									<token-query class-name="DirXML-Entitlement" scope="entry">
										<arg-dn>
											<token-local-variable name="current-node"/>
										</arg-dn>
									</token-query>
								</arg-node-set>
							</do-set-local-variable>
							<!--
			set local variable 'driverCN' with driver's CN
			-->
							<!-- 
			set local variable 'driverQualifiedDn' with the value of the 'qualified-src-dn
			attribute on the root node of 'driverObj'
			-->
							<do-set-local-variable name="holderQualifiedDn" scope="policy">
								<arg-string>
									<token-xpath expression="$holderObj/@qualified-src-dn"/>
								</arg-string>
							</do-set-local-variable>
							<do-append-xml-element expression="operation-data/entitlement-assignments[last()]" name="holder"/>
							<do-append-xml-text expression="operation-data/entitlement-assignments[last()]/holder[last()]">
								<arg-string>
									<token-parse-dn dest-dn-format="ldap" src-dn-format="qualified-slash">
										<token-local-variable name="holderQualifiedDn"/>
									</token-parse-dn>
								</arg-string>
							</do-append-xml-text>
							<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]/holder[last()]" name="entitlement-action">
								<arg-string>
									<token-text xml:space="preserve">assign</token-text>
								</arg-string>
							</do-set-xml-attr>
						</arg-actions>
					</do-for-each>
					<do-for-each>
						<arg-node-set>
							<token-local-variable name="removememberList"/>
						</arg-node-set>
						<arg-actions>
							<do-set-local-variable name="holderObj" scope="policy">
								<arg-node-set>
									<token-query class-name="DirXML-Entitlement" scope="entry">
										<arg-dn>
											<token-local-variable name="current-node"/>
										</arg-dn>
									</token-query>
								</arg-node-set>
							</do-set-local-variable>
							<!--
			set local variable 'driverCN' with driver's CN
			-->
							<!-- 
			set local variable 'driverQualifiedDn' with the value of the 'qualified-src-dn
			attribute on the root node of 'driverObj'
			-->
							<do-set-local-variable name="holderQualifiedDn" scope="policy">
								<arg-string>
									<token-xpath expression="$holderObj/@qualified-src-dn"/>
								</arg-string>
							</do-set-local-variable>
							<do-append-xml-element expression="operation-data/entitlement-assignments[last()]" name="holder"/>
							<do-append-xml-text expression="operation-data/entitlement-assignments[last()]/holder[last()]">
								<arg-string>
									<token-parse-dn dest-dn-format="ldap" src-dn-format="qualified-slash">
										<token-local-variable name="holderQualifiedDn"/>
									</token-parse-dn>
								</arg-string>
							</do-append-xml-text>
							<do-set-xml-attr expression="operation-data/entitlement-assignments[last()]/holder[last()]" name="entitlement-action">
								<arg-string>
									<token-text xml:space="preserve">revoke</token-text>
								</arg-string>
							</do-set-xml-attr>
						</arg-actions>
					</do-for-each>
					<do-strip-op-attr disabled="true" name="Member"/>
				</arg-actions>
				<arg-actions/>
			</do-if>
			<do-set-local-variable name="vetoEvent" scope="policy">
				<arg-string>
					<token-text xml:space="preserve">true</token-text>
				</arg-string>
			</do-set-local-variable>
		</actions>
	</rule>
	<rule>
		<description>Assign IDV Group Related Resources</description>
		<comment xml:space="preserve">For all operations on Group objects that contain operation-data/entitlement-assignment data, Provision IDM Resources based on those values</comment>
		<conditions>
			<and>
				<if-xpath op="true">operation-data/entitlement-assignments</if-xpath>
				<if-local-variable mode="nocase" name="vetoEvent" op="equal">true</if-local-variable>
			</and>
		</conditions>
		<actions>
			<!--
			Need to do this query with slash-form DN of UA ADMIN
			Do this by parsing the value from the object-dn in the status
			-->
			<!-- 
			set local variable 'userQualifiedDn' with the value of the 'qualified-src-dn
			attribute on the root node of 'driverObj'
			-->
			<do-set-local-variable name="adminQualifiedLDAPDn" scope="policy">
				<arg-string>
					<token-parse-dn dest-dn-format="ldap" src-dn-format="qualified-dot">
						<token-global-variable name="UAProvAdmin"/>
					</token-parse-dn>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="ua-admin-pwd" notrace="true" scope="policy">
				<arg-string>
					<token-dest-attr name="nspmDistributionPassword">
						<arg-dn>
							<token-parse-dn dest-dn-format="slash" src-dn-format="qualified-dot">
								<token-global-variable name="UAProvAdmin"/>
							</token-parse-dn>
						</arg-dn>
					</token-dest-attr>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="payload" scope="policy">
				<arg-node-set>
					<token-xpath expression="$current-op/operation-data/entitlement-assignments"/>
				</arg-node-set>
			</do-set-local-variable>
			<do-set-local-variable name="prov-payload" scope="policy">
				<arg-string>
					<token-base64-encode charset="UTF-8">
						<token-xml-serialize>
							<token-local-variable name="payload"/>
						</token-xml-serialize>
					</token-base64-encode>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="groupName" scope="policy">
				<arg-string>
					<token-src-dn/>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="rpStatus" scope="policy">
				<arg-string>
					<token-xpath expression="ps:ReconcileGroupMemberPermissions($UAProvURL, $adminQualifiedLDAPDn, $ua-admin-pwd, $groupName, 1000, $prov-payload, true)"/>
				</arg-string>
			</do-set-local-variable>
			<do-trace-message>
				<arg-string>
					<token-text xml:space="preserve">ReconcileGroupMemebrPermissions status: </token-text>
					<token-local-variable name="rpStatus"/>
				</arg-string>
			</do-trace-message>
			<do-veto/>
		</actions>
	</rule>
</policy>