<?xml version="1.0" encoding="UTF-8"?><policy xmlns:es="http://www.novell.com/nxsl/ecmascript" xmlns:ps="http://www.novell.com/nxsl/java/com.netiq.resources.ProvisioningScheduler">
	<rule>
		<description>Assign IDV User Related Resources</description>
		<comment xml:space="preserve">For all operations on User objects that contain operation-data/permission data, Provision IDM Resources based on those values</comment>
		<conditions>
			<and>
				<if-operation mode="case" op="equal">status</if-operation>
				<if-xml-attr mode="nocase" name="level" op="equal">success</if-xml-attr>
				<if-xpath op="true">operation-data/permission</if-xpath>
			</and>
		</conditions>
		<actions>
			<!--
			Need to do this query with slash-form DN of UA ADMIN
			Do this by parsing the value from the object-dn in the status
			-->
			<do-set-local-variable name="wfOperation" scope="policy">
				<arg-node-set>
					<token-xml-parse>
						<token-text xml:space="preserve">&lt;status>&lt;/status></token-text>
					</token-xml-parse>
				</arg-node-set>
			</do-set-local-variable>
			<do-clone-xpath dest-expression="$wfOperation/status" src-expression="$current-op/operation-data"/>
			<!-- 
			set local variable 'userQualifiedDn' with the value of the 'qualified-src-dn
			attribute on the root node of 'driverObj'
			-->
			<do-clone-xpath dest-expression="$wfOperation/status" src-expression="$current-op/operation-data/object-dn"/>
			<do-strip-xpath expression="$wfOperation/operation-data/object-dn"/>
			<do-append-xml-element expression="$wfOperation/status" name="driver-dn"/>
			<do-append-xml-text expression="$wfOperation/status/driver-dn">
				<arg-string>
					<token-global-variable name="dirxml.auto.driverdn"/>
				</arg-string>
			</do-append-xml-text>
			<do-set-local-variable name="adminQualifiedLDAPDn" scope="policy">
				<arg-string>
					<token-parse-dn dest-dn-format="ldap" src-dn-format="qualified-dot">
						<token-global-variable name="UAProvAdmin"/>
					</token-parse-dn>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="userQualifiedLDAPDn" scope="policy">
				<arg-string>
					<token-xpath expression="$wfOperation/status/object-dn/text()"/>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="ua-admin-pwd" notrace="true" scope="policy">
				<arg-string>
					<token-dest-attr name="nspmDistributionPassword">
						<arg-dn>
							<token-parse-dn dest-dn-format="slash" src-dn-format="qualified-dot">
								<token-global-variable name="UAProvAdmin"/>
							</token-parse-dn>
						</arg-dn>
					</token-dest-attr>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="prov-payload" scope="policy">
				<arg-string>
					<token-base64-encode charset="UTF-8">
						<token-xml-serialize>
							<token-local-variable name="wfOperation"/>
						</token-xml-serialize>
					</token-base64-encode>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="rpStatus" scope="policy">
				<arg-string>
					<token-xpath expression="ps:ReconcilePermissions($UAProvURL, $adminQualifiedLDAPDn, $ua-admin-pwd, $userQualifiedLDAPDn, 1000, $prov-payload, true)"/>
				</arg-string>
			</do-set-local-variable>
			<do-trace-message>
				<arg-string>
					<token-text xml:space="preserve">ReconcilePermissions status: </token-text>
					<token-local-variable name="rpStatus"/>
				</arg-string>
			</do-trace-message>
			<!-- 
			initialize local variable 'nameToFileMap' with the contents of the Mapping Object
			that contains the map between native permission names and a csv file that
			contains the values for that permission
			eg: '\TREE\system\driverset1\driver\PermissionNameToFile'
			-->
			<!-- 
			initialize nodeset local variable 'entitlements' with the values of the
			first column (nativeName) parsed from 'nameToFileMap'
			These will be used to create new DirXML-Entitlement objects
			-->
			<!-- 
			initialize local variable 'nameToFileMap' with the contents of the Mapping Object
			that contains the map between native permission names and a csv file that
			contains the values for that permission
			eg: '\TREE\system\driverset1\driver\PermissionNameToFile'
			-->
			<!-- 
			initialize nodeset local variable 'entitlements' with the values of the
			first column (nativeName) parsed from 'nameToFileMap'
			These will be used to create new DirXML-Entitlement objects
			-->
			<do-trace-message>
				<arg-string>
					<token-local-variable name="wfOperation"/>
				</arg-string>
			</do-trace-message>
		</actions>
	</rule>
	<rule>
		<description>Add: Assign IDV Group Related Resources</description>
		<comment xml:space="preserve">For all operations on Group objects that contain operation-data/entitlement-assignment data, Provision IDM Resources based on those values</comment>
		<conditions>
			<and>
				<if-operation mode="case" op="equal">add-association</if-operation>
				<if-xpath op="true">operation-data/entitlement-assignments</if-xpath>
			</and>
		</conditions>
		<actions>
			<!--
			Need to do this query with slash-form DN of UA ADMIN
			Do this by parsing the value from the object-dn in the status
			-->
			<!-- 
			set local variable 'userQualifiedDn' with the value of the 'qualified-src-dn
			attribute on the root node of 'driverObj'
			-->
			<do-set-local-variable name="assoc" scope="policy">
				<arg-string>
					<token-text xml:space="preserve">"</token-text>
					<token-xpath expression="$current-op/text()"/>
					<token-text xml:space="preserve">"</token-text>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="groupName" scope="policy">
				<arg-string>
					<token-xpath expression="operation-data/@unmatched-src-dn"/>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="groupFQDN" scope="policy">
				<arg-string>
					<token-local-variable name="groupName"/>
					<token-text xml:space="preserve">,</token-text>
					<token-xpath expression="es:convertLDAPtoUpper($drv.user.container)"/>
				</arg-string>
			</do-set-local-variable>
			<do-set-xml-attr expression="operation-data/entitlement-assignments" name="value">
				<arg-string>
					<token-replace-first regex='""' replace-with='"$groupFQDN$"'>
						<token-replace-first regex='""' replace-with="$assoc$">
							<token-xpath expression="operation-data/entitlement-assignments/@value"/>
						</token-replace-first>
					</token-replace-first>
				</arg-string>
			</do-set-xml-attr>
			<do-set-local-variable name="adminQualifiedLDAPDn" scope="policy">
				<arg-string>
					<token-parse-dn dest-dn-format="ldap" src-dn-format="qualified-dot">
						<token-global-variable name="UAProvAdmin"/>
					</token-parse-dn>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="ua-admin-pwd" notrace="true" scope="policy">
				<arg-string>
					<token-dest-attr name="nspmDistributionPassword">
						<arg-dn>
							<token-parse-dn dest-dn-format="slash" src-dn-format="qualified-dot">
								<token-global-variable name="UAProvAdmin"/>
							</token-parse-dn>
						</arg-dn>
					</token-dest-attr>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="payload" scope="policy">
				<arg-node-set>
					<token-xpath expression="$current-op/operation-data/entitlement-assignments"/>
				</arg-node-set>
			</do-set-local-variable>
			<do-set-local-variable name="prov-payload" scope="policy">
				<arg-string>
					<token-base64-encode charset="UTF-8">
						<token-xml-serialize>
							<token-local-variable name="payload"/>
						</token-xml-serialize>
					</token-base64-encode>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="rpStatus" scope="policy">
				<arg-string>
					<token-xpath expression="ps:ReconcileGroupMemberPermissions($UAProvURL, $adminQualifiedLDAPDn, $ua-admin-pwd, $groupFQDN, 1000, $prov-payload, true)"/>
				</arg-string>
			</do-set-local-variable>
			<do-trace-message>
				<arg-string>
					<token-text xml:space="preserve">ReconcileGroupMemberPermissions status: </token-text>
					<token-local-variable name="rpStatus"/>
				</arg-string>
			</do-trace-message>
			<do-set-local-variable name="groupEntitlementLDAPDn" scope="policy">
				<arg-string>
					<token-xpath expression="operation-data/entitlement-assignments/@entitlement"/>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="rpStatus" scope="policy">
				<arg-string>
					<token-xpath expression="ps:RefreshCodeMapforGroupEntitlement($UAProvURL, $adminQualifiedLDAPDn, $ua-admin-pwd, $groupEntitlementLDAPDn, 1000,null, true)"/>
				</arg-string>
			</do-set-local-variable>
			<do-trace-message>
				<arg-string>
					<token-text xml:space="preserve">CodeRefresh Status: </token-text>
					<token-local-variable name="rpStatus"/>
				</arg-string>
			</do-trace-message>
			<do-break/>
		</actions>
	</rule>
	<rule>
		<description>Modify: Assign IDV Group Related Resources</description>
		<comment xml:space="preserve">For all operations on Group objects that contain operation-data/entitlement-assignment data, Provision IDM Resources based on those values</comment>
		<conditions>
			<and>
				<if-operation mode="case" op="equal">status</if-operation>
				<if-xml-attr mode="nocase" name="level" op="equal">success</if-xml-attr>
				<if-xpath op="true">operation-data/entitlement-assignments</if-xpath>
				<if-xpath op="not-true">operation-data/entitlement-assignments/@value[contains(.,'""')]</if-xpath>
			</and>
		</conditions>
		<actions>
			<!--
			Need to do this query with slash-form DN of UA ADMIN
			Do this by parsing the value from the object-dn in the status
			-->
			<!-- 
			set local variable 'userQualifiedDn' with the value of the 'qualified-src-dn
			attribute on the root node of 'driverObj'
			-->
			<do-set-local-variable name="adminQualifiedLDAPDn" scope="policy">
				<arg-string>
					<token-parse-dn dest-dn-format="ldap" src-dn-format="qualified-dot">
						<token-global-variable name="UAProvAdmin"/>
					</token-parse-dn>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="ua-admin-pwd" notrace="true" scope="policy">
				<arg-string>
					<token-dest-attr name="nspmDistributionPassword">
						<arg-dn>
							<token-parse-dn dest-dn-format="slash" src-dn-format="qualified-dot">
								<token-global-variable name="UAProvAdmin"/>
							</token-parse-dn>
						</arg-dn>
					</token-dest-attr>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="payload" scope="policy">
				<arg-node-set>
					<token-xpath expression="$current-op/operation-data/entitlement-assignments"/>
				</arg-node-set>
			</do-set-local-variable>
			<do-set-local-variable name="prov-payload" scope="policy">
				<arg-string>
					<token-base64-encode charset="UTF-8">
						<token-xml-serialize>
							<token-local-variable name="payload"/>
						</token-xml-serialize>
					</token-base64-encode>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="value" scope="policy">
				<arg-string>
					<token-xpath expression="operation-data/entitlement-assignments/@value"/>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="groupFQDN" scope="policy">
				<arg-string>
					<token-xpath expression='es:getIDM4EntParamField($value, "ID2")'/>
				</arg-string>
			</do-set-local-variable>
			<do-set-local-variable name="rpStatus" scope="policy">
				<arg-string>
					<token-xpath expression="ps:ReconcileGroupMemberPermissions($UAProvURL, $adminQualifiedLDAPDn, $ua-admin-pwd, $groupFQDN, 1000, $prov-payload, true)"/>
				</arg-string>
			</do-set-local-variable>
			<do-trace-message>
				<arg-string>
					<token-text xml:space="preserve">ReconcileGroupMemberPermissions status: </token-text>
					<token-local-variable name="rpStatus"/>
				</arg-string>
			</do-trace-message>
		</actions>
	</rule>
</policy>